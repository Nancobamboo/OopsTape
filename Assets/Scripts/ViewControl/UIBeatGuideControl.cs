//This File Is Auto Generated By Process Control
using UnityEngine;

public class UIBeatGuideControl : YViewControl
{
	private UIBeatGuideView m_View;
	private System.Collections.Generic.Dictionary<int, BeatUnit> m_Units;
	private System.Collections.Generic.List<UIBeatTipControl> m_Tips = new System.Collections.Generic.List<UIBeatTipControl>(3);

	public static EResType GetResType()
	{
		return EResType.UIBeatGuide;
	}

	protected override void OnInit()
	{
		base.OnInit();
		m_View = CreateView<UIBeatGuideView>();
	}

	public void SetData(System.Collections.Generic.Dictionary<int, BeatUnit> units)
	{
		m_Units = units;
		if (m_Tips == null) m_Tips = new System.Collections.Generic.List<UIBeatTipControl>(3);
		if (m_Tips.Count == 0)
		{
			for (int i = 0; i < 3; i++)
			{
				var tip = Asset.OpenUI<UIBeatTipControl>(m_View.TipRoot);
				m_Tips.Add(tip);
				tip.ShowBg(i == 0);

			}
		}
	}

	public void UpdateBeatTip(int curBeatIndex)
	{
		if (m_Tips == null || m_Tips.Count < 3) return;
		for (int i = 0; i < 3; i++)
		{
			int idx = curBeatIndex + i;
			BeatUnit u = null;
			if (m_Units != null) m_Units.TryGetValue(idx, out u);
			bool isHit = false;
			bool isTip = false;
			if (u != null && u.AnimList != null && u.AnimList.Count != 0)
			{
				isHit = u.IsHit;
				isTip = true;
			}
			m_Tips[i].SetData(isHit, isTip);
			m_Tips[i].SetData(idx);
		}
	}

	protected override void OnReturn()
	{
		base.OnReturn();
	}
}