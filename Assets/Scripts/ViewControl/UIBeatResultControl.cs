//This File Is Auto Generated By Process Control
using UnityEngine;
using UnityEngine.SceneManagement;

public class UIBeatResultControl : YViewControl
{
	private UIBeatResultView m_View;
	private float m_InitTime;
	private bool m_CanClick = false;

	public static EResType GetResType()
	{
		return EResType.UIBeatResult;
	}

	protected override void OnInit()
	{
		base.OnInit();
		m_View = CreateView<UIBeatResultView>();
		m_View.BtnEsc.onClick.AddListener(OnBtnEscClick);
		m_InitTime = Time.time;
	}

	private void Update()
	{
		if (!m_CanClick && Time.time - m_InitTime >= 2f)
		{
			m_CanClick = true;
		}
	}

	void OnBtnEscClick()
	{
		if (!m_CanClick) return;
		Asset.TryLoadScene(UISelectControl.ESceneName.GameEntry.ToString());
	}

	public void SetData(int score)
	{
		m_View.TxtScore.text = score.ToString();

		DataLevel dataLevel = DataSystem.Instance.GetDataLevel();

		string sceneName = SceneManager.GetActiveScene().name;
		if (System.Enum.TryParse<UISelectControl.ESceneName>(sceneName, out UISelectControl.ESceneName sceneEnum))
		{
			int sceneEnumValue = (int)sceneEnum;
			if (dataLevel.LevelScoreDict.ContainsKey(sceneEnumValue))
			{
				if (score > dataLevel.LevelScoreDict[sceneEnumValue])
				{
					dataLevel.LevelScoreDict[sceneEnumValue] = score;
				}
			}
			else
			{
				dataLevel.LevelScoreDict[sceneEnumValue] = score;
			}
		}

		int level03FlyValue = (int)UISelectControl.ESceneName.Level03_Fly;
		if (!dataLevel.LevelUnlocked.Contains(level03FlyValue))
		{
			dataLevel.AddLevelUnlockedData(level03FlyValue);
		}

		if (dataLevel.LevelScoreDict.Count >= 2)
		{
			dataLevel.TutorUINum++;
			dataLevel.TutorSoundNum++;
		}
		else
		{
			if (Random.Range(0, 2) == 0)
			{
				dataLevel.TutorUINum++;
			}
			else
			{
				dataLevel.TutorSoundNum++;
			}
		}

		DataSystem.Instance.SaveDataLevel();
	}

	protected override void OnReturn()
	{
		base.OnReturn();
	}
}