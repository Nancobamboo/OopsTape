//This File Is Auto Generated By Process Control
using UnityEngine;
using System;

public enum UISelectAnimState
{
	Idel,
	UIselectUnlock,
	UISelectThis
}

public class UISelectControl : YViewControl
{
	private UISelectView m_View;
	private System.Action<int> m_OnLevelSelected;
	private bool[] m_LevelUnlocked;
	private int m_SelectedLevel = -1;

	public static EResType GetResType()
	{
		return EResType.UISelect;
	}

	protected override void OnInit()
	{
		base.OnInit();
		m_View = CreateView<UISelectView>();

		m_View.BtnLevel1.onClick.AddListener(() => OnLevelClick(0));
		m_View.BtnLevel2.onClick.AddListener(() => OnLevelClick(1));
		m_View.BtnLevel3.onClick.AddListener(() => OnLevelClick(2));
		m_View.BtnLevel4.onClick.AddListener(() => OnLevelClick(3));
	}

	public void PlayLevelAnim(int levelIndex, UISelectAnimState animState)
	{
		if (levelIndex < 0 || levelIndex >= 4) return;
		if (m_View == null) return;

		Animator[] animators = new Animator[] { m_View.Level1, m_View.Level2, m_View.Level3, m_View.Level4 };
		if (animators[levelIndex] != null)
		{
			animators[levelIndex].Play(animState.ToString(), 0);
		}
	}

	private void Start()
	{
		DataLevel dataLevel = DataSystem.Instance.GetDataLevel();
		bool[] levelUnlocked = new bool[4];

		for (int i = 0; i < levelUnlocked.Length; i++)
		{
			levelUnlocked[i] = dataLevel.LevelUnlocked.Contains(i + 1);
		}

		SetData(levelUnlocked, OnLevelSelected);
	}

	private void OnLevelSelected(int levelIndex)
	{
		string sceneName = "Level0" + (levelIndex + 1);
		Asset.TryLoadScene(sceneName);
	}

	public void SetData(bool[] levelUnlocked, System.Action<int> onLevelSelected)
	{
		m_LevelUnlocked = levelUnlocked;
		m_OnLevelSelected = onLevelSelected;
		m_SelectedLevel = -1;

		if (m_LevelUnlocked == null)
		{
			m_LevelUnlocked = new bool[] { true, true, true, true };
		}

		UpdateLevelStates();
	}

	private void UpdateLevelStates()
	{
		if (m_View == null) return;

		Animator[] animators = new Animator[] { m_View.Level1, m_View.Level2, m_View.Level3, m_View.Level4 };

		for (int i = 0; i < animators.Length && i < m_LevelUnlocked.Length; i++)
		{
			if (animators[i] != null)
			{
				if (m_LevelUnlocked[i])
				{
					animators[i].Play("Idel", 0);
				}
				else
				{
					animators[i].Play("UIselectUnlock", 0);
				}
			}
		}
	}

	public void OnLevelClick(int levelIndex)
	{
		if (levelIndex < 0 || levelIndex >= 4) return;
		if (m_LevelUnlocked == null || levelIndex >= m_LevelUnlocked.Length) return;
		if (!m_LevelUnlocked[levelIndex]) return;

		Animator[] animators = new Animator[] { m_View.Level1, m_View.Level2, m_View.Level3, m_View.Level4 };

		if (m_SelectedLevel >= 0 && m_SelectedLevel < animators.Length && animators[m_SelectedLevel] != null)
		{
			animators[m_SelectedLevel].Play("Idel", 0);
		}

		m_SelectedLevel = levelIndex;

		if (animators[levelIndex] != null)
		{
			animators[levelIndex].Play("UISelectThis", 0);
		}

		if (m_OnLevelSelected != null)
		{
			m_OnLevelSelected(levelIndex);
		}
	}

	protected override void OnReturn()
	{
		base.OnReturn();
	}
}